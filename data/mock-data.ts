import type { Entity, User, Group, Domain, Template } from "@/types"

export const mockComponents: Entity[] = [
  {
    id: "1",
    name: "user-service",
    type: "service",
    description: "Microservice handling user authentication, profiles, and authorization for the platform",
    owner: "Backend Team",
    repository: "https://github.com/company/user-service",
    status: "active",
    version: "v1.2.3",
    lastUpdated: "2 hours ago",
    dependencies: ["database-lib", "auth-lib"],
    tags: ["authentication", "microservice", "backend"],
    metadata: [
      { key: "owner", value: "Backend Team" },
      { key: "branch", value: "main" },
      { key: "status", value: "Active" },
    ],
  },
  {
    id: "2",
    name: "payment-gateway",
    type: "website",
    description: "React-based payment processing interface with Stripe integration and fraud detection",
    owner: "Frontend Team",
    repository: "https://github.com/company/payment-gateway",
    status: "active",
    version: "v2.1.0",
    lastUpdated: "1 day ago",
    dependencies: ["react", "stripe-js"],
    tags: ["payment", "frontend", "react"],
    metadata: [
      { key: "owner", value: "Frontend Team" },
      { key: "environment", value: "Production" },
      { key: "compliance", value: "PCI Compliant" },
    ],
  },
  {
    id: "3",
    name: "notification-api",
    type: "library",
    description: "Shared notification library for sending emails, SMS, and push notifications across services",
    owner: "Backend Team",
    repository: "https://github.com/company/notification-api",
    status: "active",
    version: "v2.1.4",
    lastUpdated: "3 days ago",
    dependencies: ["nodemailer", "twilio"],
    tags: ["notifications", "library", "shared"],
    metadata: [
      { key: "owner", value: "Backend Team" },
      { key: "version", value: "v2.1.4" },
      { key: "downloads", value: "1.2k/month" },
    ],
  },
  {
    id: "4",
    name: "analytics-pipeline",
    type: "service",
    description: "ETL pipeline processing user events and generating business intelligence reports",
    owner: "Data Team",
    repository: "https://github.com/company/analytics-pipeline",
    status: "active",
    version: "v1.5.2",
    lastUpdated: "2 hours ago",
    dependencies: ["kafka", "spark"],
    tags: ["analytics", "etl", "data"],
    metadata: [
      { key: "owner", value: "Data Team" },
      { key: "updated", value: "2h ago" },
      { key: "performance", value: "High Load" },
    ],
  },
  {
    id: "5",
    name: "admin-dashboard",
    type: "website",
    description: "Internal administration interface for managing users, content, and system configurations",
    owner: "Frontend Team",
    repository: "https://github.com/company/admin-dashboard",
    status: "active",
    version: "v1.8.1",
    lastUpdated: "1 week ago",
    dependencies: ["react", "admin-ui-lib"],
    tags: ["admin", "dashboard", "internal"],
    metadata: [
      { key: "owner", value: "Frontend Team" },
      { key: "access", value: "Internal" },
      { key: "users", value: "15 users" },
    ],
  },
  {
    id: "6",
    name: "cache-service",
    type: "service",
    description: "Redis-based caching layer for improving application performance and reducing database load",
    owner: "Backend Team",
    repository: "https://github.com/company/cache-service",
    status: "active",
    version: "v3.0.1",
    lastUpdated: "5 days ago",
    dependencies: ["redis", "node-cache"],
    tags: ["cache", "performance", "redis"],
    metadata: [
      { key: "owner", value: "Backend Team" },
      { key: "technology", value: "Redis 7.0" },
      { key: "performance", value: "95% hit rate" },
    ],
  },
  {
    id: "7",
    name: "search-service",
    type: "service",
    description: "Elasticsearch-powered search service with advanced filtering and faceted search capabilities",
    owner: "Backend Team",
    repository: "https://github.com/company/search-service",
    status: "active",
    version: "v2.3.1",
    lastUpdated: "4 hours ago",
    dependencies: ["elasticsearch", "redis"],
    tags: ["search", "elasticsearch", "indexing"],
    metadata: [
      { key: "owner", value: "Backend Team" },
      { key: "technology", value: "Elasticsearch 8.0" },
      { key: "performance", value: "< 50ms response" },
    ],
  },
  {
    id: "8",
    name: "mobile-app",
    type: "website",
    description: "React Native mobile application for iOS and Android with offline capabilities",
    owner: "Mobile Team",
    repository: "https://github.com/company/mobile-app",
    status: "active",
    version: "v3.2.0",
    lastUpdated: "1 day ago",
    dependencies: ["react-native", "redux"],
    tags: ["mobile", "react-native", "offline"],
    metadata: [
      { key: "owner", value: "Mobile Team" },
      { key: "platform", value: "iOS/Android" },
      { key: "downloads", value: "50k+" },
    ],
  },
]

export const mockSystems: Entity[] = [
  {
    id: "s1",
    name: "e-commerce-platform",
    type: "service",
    description: "Complete e-commerce system handling product catalog, orders, and inventory management",
    owner: "Platform Team",
    repository: "https://github.com/company/e-commerce-platform",
    status: "active",
    version: "v4.1.2",
    lastUpdated: "6 hours ago",
    dependencies: ["user-service", "payment-gateway", "inventory-service"],
    tags: ["e-commerce", "platform", "microservices"],
    metadata: [
      { key: "owner", value: "Platform Team" },
      { key: "architecture", value: "Microservices" },
      { key: "traffic", value: "10k req/min" },
    ],
  },
  {
    id: "s2",
    name: "data-warehouse",
    type: "service",
    description: "Centralized data warehouse built on Snowflake for business intelligence and analytics",
    owner: "Data Team",
    repository: "https://github.com/company/data-warehouse",
    status: "active",
    version: "v2.0.5",
    lastUpdated: "12 hours ago",
    dependencies: ["analytics-pipeline", "etl-jobs"],
    tags: ["data", "warehouse", "snowflake", "bi"],
    metadata: [
      { key: "owner", value: "Data Team" },
      { key: "technology", value: "Snowflake" },
      { key: "storage", value: "2.5TB" },
    ],
  },
  {
    id: "s3",
    name: "monitoring-stack",
    type: "service",
    description: "Comprehensive monitoring and observability stack with Prometheus, Grafana, and Jaeger",
    owner: "DevOps Team",
    repository: "https://github.com/company/monitoring-stack",
    status: "active",
    version: "v1.8.3",
    lastUpdated: "3 days ago",
    dependencies: ["prometheus", "grafana", "jaeger"],
    tags: ["monitoring", "observability", "metrics"],
    metadata: [
      { key: "owner", value: "DevOps Team" },
      { key: "metrics", value: "500+ dashboards" },
      { key: "retention", value: "90 days" },
    ],
  },
]

export const mockApis: Entity[] = [
  {
    id: "a1",
    name: "user-management-api",
    type: "api",
    description: "RESTful API for user registration, authentication, and profile management",
    owner: "Backend Team",
    repository: "https://github.com/company/user-management-api",
    status: "active",
    version: "v2.4.1",
    lastUpdated: "1 hour ago",
    dependencies: ["auth-lib", "database-lib"],
    tags: ["api", "rest", "authentication", "users"],
    metadata: [
      { key: "owner", value: "Backend Team" },
      { key: "endpoints", value: "25" },
      { key: "rate-limit", value: "1000/min" },
    ],
  },
  {
    id: "a2",
    name: "payment-processing-api",
    type: "api",
    description: "Secure payment processing API with support for multiple payment providers",
    owner: "Backend Team",
    repository: "https://github.com/company/payment-processing-api",
    status: "active",
    version: "v1.9.2",
    lastUpdated: "4 hours ago",
    dependencies: ["stripe-sdk", "paypal-sdk"],
    tags: ["api", "payments", "stripe", "paypal"],
    metadata: [
      { key: "owner", value: "Backend Team" },
      { key: "compliance", value: "PCI DSS" },
      { key: "uptime", value: "99.99%" },
    ],
  },
  {
    id: "a3",
    name: "inventory-api",
    type: "api",
    description: "Inventory management API for tracking stock levels and product availability",
    owner: "Backend Team",
    repository: "https://github.com/company/inventory-api",
    status: "active",
    version: "v3.1.0",
    lastUpdated: "2 days ago",
    dependencies: ["database-lib", "cache-service"],
    tags: ["api", "inventory", "stock", "products"],
    metadata: [
      { key: "owner", value: "Backend Team" },
      { key: "products", value: "50k+" },
      { key: "sync", value: "Real-time" },
    ],
  },
]

export const mockResources: Entity[] = [
  {
    id: "r1",
    name: "primary-database",
    type: "service",
    description: "PostgreSQL primary database cluster with read replicas for high availability",
    owner: "DevOps Team",
    repository: "https://github.com/company/database-config",
    status: "active",
    version: "v14.2",
    lastUpdated: "1 week ago",
    dependencies: ["postgresql", "pgbouncer"],
    tags: ["database", "postgresql", "cluster"],
    metadata: [
      { key: "owner", value: "DevOps Team" },
      { key: "size", value: "500GB" },
      { key: "connections", value: "200 max" },
    ],
  },
  {
    id: "r2",
    name: "redis-cluster",
    type: "service",
    description: "Redis cluster for caching and session storage with automatic failover",
    owner: "DevOps Team",
    repository: "https://github.com/company/redis-config",
    status: "active",
    version: "v7.0.5",
    lastUpdated: "3 days ago",
    dependencies: ["redis", "sentinel"],
    tags: ["cache", "redis", "cluster", "session"],
    metadata: [
      { key: "owner", value: "DevOps Team" },
      { key: "memory", value: "32GB" },
      { key: "hit-rate", value: "95%" },
    ],
  },
]

export const mockUsers: User[] = [
  {
    id: "u1",
    name: "Sarah Johnson",
    email: "sarah.johnson@company.com",
    role: "Senior Software Engineer",
    team: "Frontend Team",
    avatar: "/placeholder.svg?height=40&width=40",
    description: "Full-stack developer specializing in React and Node.js with 8 years of experience",
    joinedAt: "2021-03-15",
    lastActive: "2 hours ago",
    skills: ["React", "TypeScript", "Node.js", "GraphQL", "AWS"],
    projects: ["payment-gateway", "admin-dashboard", "mobile-app"],
  },
  {
    id: "u2",
    name: "Michael Chen",
    email: "michael.chen@company.com",
    role: "Staff Engineer",
    team: "Backend Team",
    avatar: "/placeholder.svg?height=40&width=40",
    description: "Backend architect focused on microservices and distributed systems",
    joinedAt: "2019-08-22",
    lastActive: "30 minutes ago",
    skills: ["Java", "Spring Boot", "Kubernetes", "PostgreSQL", "Redis"],
    projects: ["user-service", "analytics-pipeline", "cache-service"],
  },
  {
    id: "u3",
    name: "Emily Rodriguez",
    email: "emily.rodriguez@company.com",
    role: "Product Manager",
    team: "Product Team",
    avatar: "/placeholder.svg?height=40&width=40",
    description: "Product manager driving user experience and feature development",
    joinedAt: "2020-11-10",
    lastActive: "1 hour ago",
    skills: ["Product Strategy", "User Research", "Analytics", "Agile", "Figma"],
    projects: ["e-commerce-platform", "mobile-app"],
  },
  {
    id: "u4",
    name: "David Kim",
    email: "david.kim@company.com",
    role: "DevOps Engineer",
    team: "DevOps Team",
    avatar: "/placeholder.svg?height=40&width=40",
    description: "DevOps engineer specializing in cloud infrastructure and automation",
    joinedAt: "2020-05-18",
    lastActive: "4 hours ago",
    skills: ["AWS", "Terraform", "Docker", "Kubernetes", "Python"],
    projects: ["monitoring-stack", "primary-database", "redis-cluster"],
  },
  {
    id: "u5",
    name: "Lisa Wang",
    email: "lisa.wang@company.com",
    role: "Data Scientist",
    team: "Data Team",
    avatar: "/placeholder.svg?height=40&width=40",
    description: "Data scientist working on machine learning models and analytics",
    joinedAt: "2021-09-07",
    lastActive: "6 hours ago",
    skills: ["Python", "SQL", "Machine Learning", "Pandas", "Jupyter"],
    projects: ["analytics-pipeline", "data-warehouse"],
  },
  {
    id: "u6",
    name: "Alex Thompson",
    email: "alex.thompson@company.com",
    role: "UX Designer",
    team: "Design Team",
    avatar: "/placeholder.svg?height=40&width=40",
    description: "UX designer focused on user research and interface design",
    joinedAt: "2022-01-12",
    lastActive: "3 hours ago",
    skills: ["Figma", "User Research", "Prototyping", "Design Systems", "Usability Testing"],
    projects: ["admin-dashboard", "mobile-app"],
  },
]

export const mockGroups: Group[] = [
  {
    id: "g1",
    name: "Frontend Team",
    description: "Responsible for user interfaces, web applications, and mobile development",
    team: "Engineering",
    members: 12,
    lead: "Sarah Johnson",
    createdAt: "2019-01-15",
    updatedAt: "1 week ago",
    type: "team",
    projects: ["payment-gateway", "admin-dashboard", "mobile-app"],
  },
  {
    id: "g2",
    name: "Backend Team",
    description: "Develops and maintains server-side applications, APIs, and microservices",
    team: "Engineering",
    members: 15,
    lead: "Michael Chen",
    createdAt: "2019-01-15",
    updatedAt: "3 days ago",
    type: "team",
    projects: ["user-service", "notification-api", "cache-service", "search-service"],
  },
  {
    id: "g3",
    name: "Data Team",
    description: "Handles data engineering, analytics, and machine learning initiatives",
    team: "Engineering",
    members: 8,
    lead: "Lisa Wang",
    createdAt: "2020-03-10",
    updatedAt: "1 day ago",
    type: "team",
    projects: ["analytics-pipeline", "data-warehouse"],
  },
  {
    id: "g4",
    name: "DevOps Team",
    description: "Manages infrastructure, deployment pipelines, and system reliability",
    team: "Engineering",
    members: 6,
    lead: "David Kim",
    createdAt: "2019-06-20",
    updatedAt: "2 days ago",
    type: "team",
    projects: ["monitoring-stack", "primary-database", "redis-cluster"],
  },
  {
    id: "g5",
    name: "Product Team",
    description: "Defines product strategy, requirements, and user experience",
    team: "Product",
    members: 5,
    lead: "Emily Rodriguez",
    createdAt: "2019-01-15",
    updatedAt: "1 week ago",
    type: "team",
    projects: ["e-commerce-platform", "mobile-app"],
  },
  {
    id: "g6",
    name: "Design Team",
    description: "Creates user experiences, visual designs, and design systems",
    team: "Design",
    members: 4,
    lead: "Alex Thompson",
    createdAt: "2020-08-01",
    updatedAt: "4 days ago",
    type: "team",
    projects: ["admin-dashboard", "mobile-app"],
  },
]

export const mockDomains: Domain[] = [
  {
    id: "d1",
    name: "User Management",
    description: "Domain responsible for user authentication, profiles, and access control",
    owner: "Backend Team",
    systems: ["user-service", "user-management-api"],
    status: "active",
    createdAt: "2019-02-01",
    updatedAt: "1 week ago",
    tags: ["authentication", "users", "security"],
  },
  {
    id: "d2",
    name: "E-commerce",
    description: "Core business domain handling product catalog, orders, and payments",
    owner: "Platform Team",
    systems: ["e-commerce-platform", "payment-gateway", "inventory-api"],
    status: "active",
    createdAt: "2019-01-15",
    updatedAt: "2 days ago",
    tags: ["e-commerce", "payments", "orders"],
  },
  {
    id: "d3",
    name: "Analytics & Insights",
    description: "Data processing and business intelligence domain",
    owner: "Data Team",
    systems: ["analytics-pipeline", "data-warehouse"],
    status: "active",
    createdAt: "2020-03-15",
    updatedAt: "3 days ago",
    tags: ["analytics", "data", "insights"],
  },
  {
    id: "d4",
    name: "Infrastructure",
    description: "Platform infrastructure and operational systems",
    owner: "DevOps Team",
    systems: ["monitoring-stack", "primary-database", "redis-cluster"],
    status: "active",
    createdAt: "2019-06-01",
    updatedAt: "1 day ago",
    tags: ["infrastructure", "monitoring", "databases"],
  },
]

export const mockTemplates: Template[] = [
  {
    id: "t1",
    name: "React Service Template",
    description: "Boilerplate for creating new React-based frontend services with TypeScript",
    language: "TypeScript",
    framework: "React",
    author: "Frontend Team",
    createdAt: "2022-01-15",
    updatedAt: "1 month ago",
    downloads: 45,
    tags: ["react", "typescript", "frontend", "boilerplate"],
    category: "Frontend",
  },
  {
    id: "t2",
    name: "Node.js Microservice",
    description: "Template for creating Node.js microservices with Express and TypeScript",
    language: "TypeScript",
    framework: "Express",
    author: "Backend Team",
    createdAt: "2021-11-20",
    updatedAt: "2 weeks ago",
    downloads: 78,
    tags: ["nodejs", "express", "microservice", "api"],
    category: "Backend",
  },
  {
    id: "t3",
    name: "Python Data Pipeline",
    description: "Template for creating data processing pipelines with Python and Apache Airflow",
    language: "Python",
    framework: "Airflow",
    author: "Data Team",
    createdAt: "2022-03-10",
    updatedAt: "3 weeks ago",
    downloads: 23,
    tags: ["python", "airflow", "data", "pipeline"],
    category: "Data",
  },
  {
    id: "t4",
    name: "Terraform Module",
    description: "Reusable Terraform module template for AWS infrastructure components",
    language: "HCL",
    framework: "Terraform",
    author: "DevOps Team",
    createdAt: "2021-08-05",
    updatedAt: "1 week ago",
    downloads: 34,
    tags: ["terraform", "aws", "infrastructure", "iac"],
    category: "Infrastructure",
  },
  {
    id: "t5",
    name: "GraphQL API Template",
    description: "Template for creating GraphQL APIs with Apollo Server and TypeScript",
    language: "TypeScript",
    framework: "Apollo",
    author: "Backend Team",
    createdAt: "2022-05-18",
    updatedAt: "2 months ago",
    downloads: 19,
    tags: ["graphql", "apollo", "api", "typescript"],
    category: "Backend",
  },
]
